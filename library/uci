#!/usr/bin/lua
--
-- Ansible module for LUCI
--

require("uci")
x = uci.cursor()

fail = function (msg)
  print('{"failed": true, "msg": "' .. msg .. '"}')
  os.exit(1)
end

-- read input
f = io.open(arg[1], "r")
line = f:read("*all")
f:close()

-- split input into command and arguments
i = string.find(line, " ")
if not i then
  fail("unable to parse arguments")
end
command = string.sub(line,0,i-1)
args    = string.sub(line,i+1)

-- evaluate commands
if command=="set" then

  i = string.find(args, "=", i)
  if not i then
    fail("unable to parse key-value pair")
  end
  key   = string.sub(args,0,i-1)
  value = string.sub(args,i+1)

  if not key then
    fail("key is missing")
  end

  if not value then
    fail("value is missing")
  end

  -- split key
  config, section, option = string.match(key, "([^\.]+)\.([^\.]+)\.([^\.]+)")
  old = x:get(config, section, option)
  if old == value then
    print('{"changed": false}')
  else
    if not x:get(config, section) then
      fail("section not found")
    end

    x:set(config, section, option, value)
    x:commit(config)
    print('{"changed": true}')
  end
else
  fail("unsupported command: " .. command)
end
